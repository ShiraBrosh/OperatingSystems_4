==8198== Helgrind, a thread error detector
==8198== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==8198== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8198== Command: ./race
==8198== 
==8198== ---Thread-Announcement------------------------------------------
==8198== 
==8198== Thread #4 was created
==8198==    at 0x49989F3: clone (clone.S:76)
==8198==    by 0x49998EE: __clone_internal (clone-internal.c:83)
==8198==    by 0x49076D8: create_thread (pthread_create.c:295)
==8198==    by 0x49081FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==8198==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==8198==    by 0x1092C3: main (race.cpp:24)
==8198== 
==8198== ---Thread-Announcement------------------------------------------
==8198== 
==8198== Thread #3 was created
==8198==    at 0x49989F3: clone (clone.S:76)
==8198==    by 0x49998EE: __clone_internal (clone-internal.c:83)
==8198==    by 0x49076D8: create_thread (pthread_create.c:295)
==8198==    by 0x49081FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==8198==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==8198==    by 0x1092C3: main (race.cpp:24)
==8198== 
==8198== ----------------------------------------------------------------
==8198== 
==8198== Possible data race during read of size 8 at 0x10C018 by thread #4
==8198== Locks held: none
==8198==    at 0x10920B: square(void*) (race.cpp:12)
==8198==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==8198==    by 0x4907AC2: start_thread (pthread_create.c:442)
==8198==    by 0x4998A03: clone (clone.S:100)
==8198== 
==8198== This conflicts with a previous write of size 8 by thread #3
==8198== Locks held: none
==8198==    at 0x109215: square(void*) (race.cpp:12)
==8198==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==8198==    by 0x4907AC2: start_thread (pthread_create.c:442)
==8198==    by 0x4998A03: clone (clone.S:100)
==8198==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==8198== 
==8198== ----------------------------------------------------------------
==8198== 
==8198== Possible data race during write of size 8 at 0x10C018 by thread #4
==8198== Locks held: none
==8198==    at 0x109215: square(void*) (race.cpp:12)
==8198==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==8198==    by 0x4907AC2: start_thread (pthread_create.c:442)
==8198==    by 0x4998A03: clone (clone.S:100)
==8198== 
==8198== This conflicts with a previous write of size 8 by thread #3
==8198== Locks held: none
==8198==    at 0x109215: square(void*) (race.cpp:12)
==8198==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==8198==    by 0x4907AC2: start_thread (pthread_create.c:442)
==8198==    by 0x4998A03: clone (clone.S:100)
==8198==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==8198== 
2870
==8198== 
==8198== Use --history-level=approx or =none to gain increased speed, at
==8198== the cost of reduced accuracy of conflicting-access information
==8198== For lists of detected and suppressed errors, rerun with: -s
==8198== ERROR SUMMARY: 36 errors from 2 contexts (suppressed: 344 from 20)
